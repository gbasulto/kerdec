// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ft_kernel_cpp
arma::vec ft_kernel_cpp(const arma::mat& t, int ker);
RcppExport SEXP kerdec_ft_kernel_cpp(SEXP tSEXP, SEXP kerSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ker(kerSEXP);
    __result = Rcpp::wrap(ft_kernel_cpp(t, ker));
    return __result;
END_RCPP
}
// ecf_re_cpp
arma::vec ecf_re_cpp(const arma::mat& t, const arma::mat& smp);
RcppExport SEXP kerdec_ecf_re_cpp(SEXP tSEXP, SEXP smpSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    __result = Rcpp::wrap(ecf_re_cpp(t, smp));
    return __result;
END_RCPP
}
// ecf_im_cpp
arma::vec ecf_im_cpp(const arma::mat& t, const arma::mat& smp);
RcppExport SEXP kerdec_ecf_im_cpp(SEXP tSEXP, SEXP smpSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    __result = Rcpp::wrap(ecf_im_cpp(t, smp));
    return __result;
END_RCPP
}
// ecf_mod_cpp
arma::vec ecf_mod_cpp(const arma::mat& t, const arma::mat& smp);
RcppExport SEXP kerdec_ecf_mod_cpp(SEXP tSEXP, SEXP smpSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    __result = Rcpp::wrap(ecf_mod_cpp(t, smp));
    return __result;
END_RCPP
}
// ecf_cpp
arma::cx_vec ecf_cpp(const arma::mat& t, const arma::mat& smp);
RcppExport SEXP kerdec_ecf_cpp(SEXP tSEXP, SEXP smpSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    __result = Rcpp::wrap(ecf_cpp(t, smp));
    return __result;
END_RCPP
}
// dens_denominator
arma::vec dens_denominator(const arma::vec& t, const arma::vec& smp, double sigma, int k, int error_dist, int panel_proc);
RcppExport SEXP kerdec_dens_denominator(SEXP tSEXP, SEXP smpSEXP, SEXP sigmaSEXP, SEXP kSEXP, SEXP error_distSEXP, SEXP panel_procSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type smp(smpSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type error_dist(error_distSEXP);
    Rcpp::traits::input_parameter< int >::type panel_proc(panel_procSEXP);
    __result = Rcpp::wrap(dens_denominator(t, smp, sigma, k, error_dist, panel_proc));
    return __result;
END_RCPP
}
// kerdec_dens_pure_1d_cpp
arma::cx_vec kerdec_dens_pure_1d_cpp(const arma::vec& smp, const arma::vec& error_smp, double h, double lower, double upper, int resolution, int ker, double cutoff);
RcppExport SEXP kerdec_kerdec_dens_pure_1d_cpp(SEXP smpSEXP, SEXP error_smpSEXP, SEXP hSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP resolutionSEXP, SEXP kerSEXP, SEXP cutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type smp(smpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type error_smp(error_smpSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type resolution(resolutionSEXP);
    Rcpp::traits::input_parameter< int >::type ker(kerSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    __result = Rcpp::wrap(kerdec_dens_pure_1d_cpp(smp, error_smp, h, lower, upper, resolution, ker, cutoff));
    return __result;
END_RCPP
}
// process_differences
arma::vec process_differences(const arma::mat& smp, int method);
RcppExport SEXP kerdec_process_differences(SEXP smpSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    __result = Rcpp::wrap(process_differences(smp, method));
    return __result;
END_RCPP
}
// error_cf_approx
arma::vec error_cf_approx(const arma::vec& t, const arma::mat& smp, int diff_method);
RcppExport SEXP kerdec_error_cf_approx(SEXP tSEXP, SEXP smpSEXP, SEXP diff_methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    Rcpp::traits::input_parameter< int >::type diff_method(diff_methodSEXP);
    __result = Rcpp::wrap(error_cf_approx(t, smp, diff_method));
    return __result;
END_RCPP
}
// kerdec_dens_panel_1d_cpp
arma::cx_vec kerdec_dens_panel_1d_cpp(const arma::mat& smp, double h, double lower, double upper, int resolution, int ker, double cutoff, int diff_processing);
RcppExport SEXP kerdec_kerdec_dens_panel_1d_cpp(SEXP smpSEXP, SEXP hSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP resolutionSEXP, SEXP kerSEXP, SEXP cutoffSEXP, SEXP diff_processingSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type resolution(resolutionSEXP);
    Rcpp::traits::input_parameter< int >::type ker(kerSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< int >::type diff_processing(diff_processingSEXP);
    __result = Rcpp::wrap(kerdec_dens_panel_1d_cpp(smp, h, lower, upper, resolution, ker, cutoff, diff_processing));
    return __result;
END_RCPP
}
// kerdec_dens
arma::cx_vec kerdec_dens(const arma::vec& smp);
RcppExport SEXP kerdec_kerdec_dens(SEXP smpSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type smp(smpSEXP);
    __result = Rcpp::wrap(kerdec_dens(smp));
    return __result;
END_RCPP
}
